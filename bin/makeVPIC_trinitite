#!/bin/bash

################################################################################
# Set some high level variables.

ARCH=$1

BRANCH=$2

NJ=$3

VPIC_ROOT=$PWD

export VPIC_DIR=$VPIC_ROOT/build/$ARCH/vpic

################################################################################
# Switch to the build directory and copy the VPIC source.  First check for the
# existence of an old VPIC directory and remove it if it does exist.

cd build

if [ -d $ARCH ]; then
  rm -rf $ARCH
fi

mkdir $ARCH
cd $ARCH

cp -R $VPIC_ROOT/src/branches/$BRANCH/vpic .

cd $VPIC_DIR

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V16_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V16_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V16_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V16_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_NONE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_SSE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V16_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V16_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V16_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V16_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V16_AVX512_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V16_AVX512=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V16_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V16_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V16_AVX512_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V16_AVX512=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_NONE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_SSE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V16_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V16_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V16_AVX512_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V16_AVX512=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_NONE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_SSE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_NONE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_SSE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_NONE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_SSE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_NONE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_SSE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V4_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_CCE_OPT_V8_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_NONE_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_PORT_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_SSE_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V4_AVX2_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_PORT_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_INT_OPT_V8_AVX2_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O0 -inline-forceinline -dynamic -craype-verbose -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

#    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_NONE_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_PORT_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_SSE_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V4_AVX2_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_PORT_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_PTH_GNU_OPT_V8_AVX2_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_NONE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_SSE_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_PORT_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_AVX2_HSW" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V16_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V16_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V16_AVX512_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V16_AVX512=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O3 -inline-forceinline -vec-threshold0 -qopt-report=3 -qopt-report-phase=all -Winline -qoverride-limits -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_NONE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_SSE_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_PORT_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_AVX2_KNL" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_NONE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_SSE_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_PORT_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_AVX2_HSW_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_NONE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_SSE_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_PORT_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_AVX2_KNL_CPAT" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_NONE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_SSE_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_PORT_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_AVX2_HSW_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap intel/16.0.3 intel/17.0.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-gnu
  module swap PrgEnv-gnu/6.0.2 PrgEnv-gnu/6.0.3
  module swap gcc/5.3.0 gcc/6.1.0
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Cray compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_NONE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_SSE_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V4_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_PORT_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_CCE_OPT_V8_AVX2_KNL_CPAT_LITE" ]; then
  module load friendly-testing
  module load sandbox
  module swap PrgEnv-intel PrgEnv-cray
  module swap PrgEnv-cray/6.0.2 PrgEnv-cray/6.0.3
  module swap craype-haswell craype-mic-knl
  module load perftools-base
  module swap perftools-base perftools-base/6.4.1
  module load perftools-lite

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    -DCMAKE_CXX_FLAGS="-O2 -hlist=ad -hipa5 -dynamic -craype-verbose" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_HSW_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_HSW_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_NONE_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_PORT_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_SSE_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers and OpenMPI.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V4_AVX2_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_PORT_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with Intel compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_INT_OPT_V8_AVX2_KNL_VTUNE" ]; then
  module swap intel/17.0.0 intel/16.0.3
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-g -O0 -inline-forceinline -dynamic -craype-verbose -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

#    -DCMAKE_CXX_FLAGS="-g -O2 -dynamic -qopt-report=3 -qopt-report-phase=all -craype-verbose -DVPIC_USE_VTUNE_OFF -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \

################################################################################################################################################################

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_NONE_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_PORT_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_SSE_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_SSE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -msse -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V4_AVX2_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_PORT_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_PORTABLE=ON \
    -DUSE_V8_PORTABLE=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi

################################################################################
# Build an optimized version of VPIC with GNU compilers.

if [ $ARCH = "TRINITITE_MASTER_CLE_OMP_GNU_OPT_V8_AVX2_KNL_VTUNE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu
  module swap craype-haswell craype-mic-knl
  module load intel-performance-tools/2016.3.067

  module list

  export MPI_ROOT=$MPICH_DIR

  cd $VPIC_DIR
  mkdir build
  cd build
  cmake \
    -LAH \
    -DCMAKE_BUILD_TYPE=None \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=$VPIC_DIR/build/lib \
    -DENABLE_COLOR_UNIT_TESTS=ON \
    -DENABLE_INTEGRATED_TESTS=ON \
    -DENABLE_UNIT_TESTS=ON \
    -DUSE_V4_AVX2=ON \
    -DUSE_V8_AVX2=ON \
    -DVPIC_PRINT_MORE_DIGITS=ON \
    -DUSE_OPENMP=ON \
    -DUSE_PTHREADS=OFF \
    -DCMAKE_C_COMPILER=cc \
    -DCMAKE_CXX_COMPILER=CC \
    -DCMAKE_C_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                     -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    -DCMAKE_CXX_FLAGS="-O2 -mavx2 -mavx -mfma -ffast-math -fno-unsafe-math-optimizations -fno-strict-aliasing -fomit-frame-pointer -DVPIC_USE_VTUNE_OFF \
                       -debug inline-debug-info -parallel-source-info=2 -I$VTUNE_AMPLIFIER_XE_2016_DIR/include" \
    ..
  make -j $NJ VERBOSE=1
fi
