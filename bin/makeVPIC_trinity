#!/bin/bash

################################################################################
# Set some high level variables.

ARCH=$1

BRANCH=$2

NJ=$3

VPIC_ROOT=$PWD

export VPIC_DIR=$VPIC_ROOT/build/$ARCH/vpic

################################################################################
# Switch to the build directory and copy the VPIC source.  First check for the
# existence of an old VPIC directory and remove it if it does exist.

cd build

if [ -d $ARCH ]; then
  rm -rf $ARCH
fi

mkdir $ARCH
cd $ARCH

cp -R $VPIC_ROOT/src/branches/$BRANCH/vpic .

cd $VPIC_DIR

################################################################################
# Build an optimized version of VPIC v407 branch with GNU compilers and OpenMPI.
# Use the SSE implementation of the V4 SIMD vector class.

if [ $ARCH = "TRINITY_V407_GNU_OPT_CRAYMPI_V4_SSE" ]; then
  module swap PrgEnv-intel PrgEnv-gnu

  module list

  cd $VPIC_DIR
  config/bootstrap
  LD=CC CXX=CC CC=cc configure \
      --with-machine=trinity_gnu_cray_mpich \
      --prefix=$VPIC_DIR
  make
fi

################################################################################
# Build an optimized version of VPIC v407 branch with GNU compilers and OpenMPI.
# Use the SSE implementation of the V4 SIMD vector class.  Also use HIO.

if [ $ARCH = "TRINITY_V407_GNU_OPT_CRAYMPI_V4_SSE_HIO" ]; then
  module swap PrgEnv-intel PrgEnv-gnu

  module list

  cd $VPIC_DIR
  config/bootstrap
  LD=CC CXX=CC CC=cc configure \
      --with-machine=trinity_gnu_cray_mpich_hio \
      --prefix=$VPIC_DIR
  make

#      --enable-shared \
#      --disable-static \
fi
