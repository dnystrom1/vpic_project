#!/bin/bash

##############################################################################################################################################
# Configure modules.

source bashrc.modules

##############################################################################################################################################
# Figure out problem being run based on value of PWD variable.

if echo $PWD | grep -q "lpi"
then
    prob=lpi
fi

if echo $PWD | grep -q "reconnection"
then
    prob=reconnection
fi

if [ "x$prob" = "x" ]
then
    echo "The prob bash variable is not set to a valid problem."
    exit 1
fi

##############################################################################################################################################
# Preliminary stuff.

vtime=''

#voc='--vm-overcommit=enable'
voc=''

##############################################################################################################################################
# Configure aprun and xpre variables based on type of run.

############################################################
# Configure default run without extra tools.

xpre='./'

aprun='mpirun'

############################################################
# Configure MAP profiling collection run.

#xpre='./'

#aprun='map --profile mpirun'

############################################################
# Configure Intel Application Performance Snapshot run.

#xpre='aps ./'

#aprun='mpirun'

##############################################################################################################################################
# Define some useful variables to tame the command lines when using the low level process binding interface.

cpu_list_rpc2_32_socket_0="0,32,1,33,2,34,3,35,4,36,5,37,6,38,7,39,8,40,9,41,10,42,11,43,12,44,13,45,14,46,15,47"
cpu_list_rpc2_32_socket_1="16,48,17,49,18,50,19,51,20,52,21,53,22,54,23,55,24,56,25,57,26,58,27,59,28,60,29,61,30,62,31,63"

cpu_list_rpc2_16_socket_0="0,32,1,33,2,34,3,35,4,36,5,37,6,38,7,39"
cpu_list_rpc2_16_socket_1="16,48,17,49,18,50,19,51,20,52,21,53,22,54,23,55"

cpu_list_rpc2_08_socket_0="0,32,1,33,2,34,3,35"
cpu_list_rpc2_08_socket_1="16,48,17,49,18,50,19,51"

cpu_list_rpc2_04_socket_0="0,32,1,33"
cpu_list_rpc2_04_socket_1="16,48,17,49"

cpu_list_rpc2_02_socket_0="0,32"
cpu_list_rpc2_02_socket_1="16,48"

cpu_list_rpc2_01_socket_0="0,32"

#cpu_bind_rpc2_32="--cpu_bind=map_cpu:${cpu_list_rpc2_32_socket_0},${cpu_list_rpc2_32_socket_1}"
#cpu_bind_rpc2_16="--cpu_bind=map_cpu:${cpu_list_rpc2_16_socket_0},${cpu_list_rpc2_16_socket_1}"
#cpu_bind_rpc2_08="--cpu_bind=map_cpu:${cpu_list_rpc2_08_socket_0},${cpu_list_rpc2_08_socket_1}"
#cpu_bind_rpc2_04="--cpu_bind=map_cpu:${cpu_list_rpc2_04_socket_0},${cpu_list_rpc2_04_socket_1}"
#cpu_bind_rpc2_02="--cpu_bind=map_cpu:${cpu_list_rpc2_02_socket_0},${cpu_list_rpc2_02_socket_1}"
#cpu_bind_rpc2_01="--cpu_bind=map_cpu:${cpu_list_rpc2_01_socket_0}"

cpu_bind_rpc2_32="--use-hwthread-cpus --map-by ppr:32:socket:pe=1"
cpu_bind_rpc2_16="--use-hwthread-cpus --map-by ppr:16:socket:pe=1"
cpu_bind_rpc2_08="--use-hwthread-cpus --map-by ppr:8:socket:pe=1"
cpu_bind_rpc2_04="--use-hwthread-cpus --map-by ppr:4:socket:pe=1"
cpu_bind_rpc2_02="--use-hwthread-cpus --map-by ppr:2:socket:pe=1"
cpu_bind_rpc2_01="--use-hwthread-cpus --map-by ppr:2:socket:pe=1"

cpu_list_rpc1_32_socket_0="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
cpu_list_rpc1_32_socket_1="16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"

cpu_list_rpc1_16_socket_0="0,1,2,3,4,5,6,7"
cpu_list_rpc1_16_socket_1="16,17,18,19,20,21,22,23"

cpu_list_rpc1_08_socket_0="0,1,2,3"
cpu_list_rpc1_08_socket_1="16,17,18,19"

cpu_list_rpc1_04_socket_0="0,1"
cpu_list_rpc1_04_socket_1="16,17"

cpu_list_rpc1_02_socket_0="0"
cpu_list_rpc1_02_socket_1="16"

cpu_list_rpc1_01_socket_0="0"

#cpu_bind_rpc1_32="--cpu_bind=map_cpu:${cpu_list_rpc1_32_socket_0},${cpu_list_rpc1_32_socket_1}"
#cpu_bind_rpc1_16="--cpu_bind=map_cpu:${cpu_list_rpc1_16_socket_0},${cpu_list_rpc1_16_socket_1}"
#cpu_bind_rpc1_08="--cpu_bind=map_cpu:${cpu_list_rpc1_08_socket_0},${cpu_list_rpc1_08_socket_1}"
#cpu_bind_rpc1_04="--cpu_bind=map_cpu:${cpu_list_rpc1_04_socket_0},${cpu_list_rpc1_04_socket_1}"
#cpu_bind_rpc1_02="--cpu_bind=map_cpu:${cpu_list_rpc1_02_socket_0},${cpu_list_rpc1_02_socket_1}"
#cpu_bind_rpc1_01="--cpu_bind=map_cpu:${cpu_list_rpc1_01_socket_0}"

cpu_bind_rpc1_32="--map-by ppr:16:socket:pe=1"
cpu_bind_rpc1_16="--map-by ppr:8:socket:pe=1"
cpu_bind_rpc1_08="--map-by ppr:4:socket:pe=1"
cpu_bind_rpc1_04="--map-by ppr:2:socket:pe=1"
cpu_bind_rpc1_02="--map-by ppr:1:socket:pe=1"
cpu_bind_rpc1_01="--map-by ppr:1:socket:pe=1"

##############################################################################################################################################
# Large DDR problem, strong scaled across 1 node.

##############################################################################################################################################
# MPI only, 2 ranks/core.

${aprun} -n 64 ${cpu_bind_rpc2_32} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_064_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_064_nrpc_002.log
${aprun} -n 32 ${cpu_bind_rpc2_16} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_032_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_032_nrpc_002.log
${aprun} -n 16 ${cpu_bind_rpc2_08} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_016_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_016_nrpc_002.log
${aprun} -n  8 ${cpu_bind_rpc2_04} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_008_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_008_nrpc_002.log
${aprun} -n  4 ${cpu_bind_rpc2_02} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_004_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_004_nrpc_002.log
${aprun} -n  2 ${cpu_bind_rpc2_01} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_002_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_002_nrpc_002.log

##############################################################################################################################################
# MPI only, 1 rank/core.

${aprun} -n 32 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_032_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_032_nrpc_001.log
${aprun} -n 16 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_016_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_016_nrpc_001.log
${aprun} -n  8 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_008_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_008_nrpc_001.log
${aprun} -n  4 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_004_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_004_nrpc_001.log
${aprun} -n  2 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_002_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_002_nrpc_001.log
${aprun} -n  1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_001_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_001_nrpc_001.log

##############################################################################################################################################
# Small HBM problem, strong scaled across 1 node.

##############################################################################################################################################
# MPI only, 2 ranks/core.

${aprun} -n 64 ${cpu_bind_rpc2_32} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_064_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_064_nrpc_002.log
${aprun} -n 32 ${cpu_bind_rpc2_16} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_032_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_032_nrpc_002.log
${aprun} -n 16 ${cpu_bind_rpc2_08} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_016_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_016_nrpc_002.log
${aprun} -n  8 ${cpu_bind_rpc2_04} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_008_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_008_nrpc_002.log
${aprun} -n  4 ${cpu_bind_rpc2_02} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_004_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_004_nrpc_002.log
${aprun} -n  2 ${cpu_bind_rpc2_01} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_002_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_002_nrpc_002.log

##############################################################################################################################################
# MPI only, 1 rank/core.

${aprun} -n 32 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_032_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_032_nrpc_001.log
${aprun} -n 16 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_016_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_016_nrpc_001.log
${aprun} -n  8 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_008_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_008_nrpc_001.log
${aprun} -n  4 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_004_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_004_nrpc_001.log
${aprun} -n  2 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_002_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_002_nrpc_001.log
${aprun} -n  1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_001_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_001_nrpc_001.log
