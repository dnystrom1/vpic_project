#!/bin/bash

##############################################################################################################################################
# Configure modules.

source bashrc.modules

##############################################################################################################################################
# Figure out problem being run based on value of PWD variable.

if echo $PWD | grep -q "lpi"
then
    prob=lpi
fi

if echo $PWD | grep -q "lpi_sp"
then
    prob=lpi_sp
fi

if echo $PWD | grep -q "reconnection"
then
    prob=reconnection
fi

if [ "x$prob" = "x" ]
then
    echo "The prob bash variable is not set to a valid problem."
    exit 1
fi

##############################################################################################################################################
# Preliminary stuff.

arm_tpc=1

vtime=''

#voc='--vm-overcommit=enable'
voc=''

##############################################################################################################################################
# Configure aprun and xpre variables based on type of run.

############################################################
# Configure default run without extra tools.

xpre='./'

aprun='srun'

############################################################
# Configure MAP profiling collection run.

#xpre='./'

#aprun='map --profile srun'

##############################################################################################################################################
# Define some useful variables to tame the command lines when using the low level process binding interface.

if [ x${arm_tpc} = "x1" ]
then
    cpu_list_rpc1_56_socket_0="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27"
    cpu_list_rpc1_56_socket_1="28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55"

    cpu_list_rpc1_32_socket_0="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
    cpu_list_rpc1_32_socket_1="28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43"

    cpu_list_rpc1_16_socket_0="0,1,2,3,4,5,6,7"
    cpu_list_rpc1_16_socket_1="28,29,30,31,32,33,34,35"

    cpu_list_rpc1_08_socket_0="0,1,2,3"
    cpu_list_rpc1_08_socket_1="28,29,30,31"

    cpu_list_rpc1_04_socket_0="0,1"
    cpu_list_rpc1_04_socket_1="28,29"

    cpu_list_rpc1_02_socket_0="0"
    cpu_list_rpc1_02_socket_1="28"

    cpu_list_rpc1_01_socket_0="0"

elif [ x${arm_tpc} = "x2" ]
then
    cpu_list_rpc1_56_socket_0="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27"
    cpu_list_rpc1_56_socket_1="56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83"

    cpu_list_rpc1_32_socket_0="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
    cpu_list_rpc1_32_socket_1="56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71"

    cpu_list_rpc1_16_socket_0="0,1,2,3,4,5,6,7"
    cpu_list_rpc1_16_socket_1="56,57,58,59,60,61,62,63"

    cpu_list_rpc1_08_socket_0="0,1,2,3"
    cpu_list_rpc1_08_socket_1="56,57,58,59"

    cpu_list_rpc1_04_socket_0="0,1"
    cpu_list_rpc1_04_socket_1="56,57"

    cpu_list_rpc1_02_socket_0="0"
    cpu_list_rpc1_02_socket_1="56"

    cpu_list_rpc1_01_socket_0="0"

else
    cpu_list_rpc1_56_socket_0="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27"
    cpu_list_rpc1_56_socket_1="112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139"

    cpu_list_rpc1_32_socket_0="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
    cpu_list_rpc1_32_socket_1="112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127"

    cpu_list_rpc1_16_socket_0="0,1,2,3,4,5,6,7"
    cpu_list_rpc1_16_socket_1="112,113,114,115,116,117,118,119"

    cpu_list_rpc1_08_socket_0="0,1,2,3"
    cpu_list_rpc1_08_socket_1="112,113,114,115"

    cpu_list_rpc1_04_socket_0="0,1"
    cpu_list_rpc1_04_socket_1="112,113"

    cpu_list_rpc1_02_socket_0="0"
    cpu_list_rpc1_02_socket_1="112"

    cpu_list_rpc1_01_socket_0="0"
fi

cpu_bind_rpc1_56="--cpu_bind=map_cpu:${cpu_list_rpc1_56_socket_0},${cpu_list_rpc1_56_socket_1}"
cpu_bind_rpc1_32="--cpu_bind=map_cpu:${cpu_list_rpc1_32_socket_0},${cpu_list_rpc1_32_socket_1}"
cpu_bind_rpc1_16="--cpu_bind=map_cpu:${cpu_list_rpc1_16_socket_0},${cpu_list_rpc1_16_socket_1}"
cpu_bind_rpc1_08="--cpu_bind=map_cpu:${cpu_list_rpc1_08_socket_0},${cpu_list_rpc1_08_socket_1}"
cpu_bind_rpc1_04="--cpu_bind=map_cpu:${cpu_list_rpc1_04_socket_0},${cpu_list_rpc1_04_socket_1}"
cpu_bind_rpc1_02="--cpu_bind=map_cpu:${cpu_list_rpc1_02_socket_0},${cpu_list_rpc1_02_socket_1}"
cpu_bind_rpc1_01="--cpu_bind=map_cpu:${cpu_list_rpc1_01_socket_0}"

##############################################################################################################################################
# Large DDR problem, strong scaled across 1 node.

##############################################################################################################################################
# MPI + OpenMP, 1 rank/core, 4 threads/rank.

#export OMP_NUM_THREADS=4

#${aprun} -n 56 -N 1 ${cpu_bind_rpc1_56} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_056_ntpp_004.Linux --tpp 4 >& ${prob}_ddr_nn_0001_nppn_056_ntpp_004.log
#${aprun} -n 32 -N 1 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_032_ntpp_004.Linux --tpp 4 >& ${prob}_ddr_nn_0001_nppn_032_ntpp_004.log
#${aprun} -n 16 -N 1 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_016_ntpp_004.Linux --tpp 4 >& ${prob}_ddr_nn_0001_nppn_016_ntpp_004.log
#${aprun} -n  8 -N 1 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_008_ntpp_004.Linux --tpp 4 >& ${prob}_ddr_nn_0001_nppn_008_ntpp_004.log
#${aprun} -n  4 -N 1 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_004_ntpp_004.Linux --tpp 4 >& ${prob}_ddr_nn_0001_nppn_004_ntpp_004.log
#${aprun} -n  2 -N 1 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_002_ntpp_004.Linux --tpp 4 >& ${prob}_ddr_nn_0001_nppn_002_ntpp_004.log
#${aprun} -n  1 -N 1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_001_ntpp_004.Linux --tpp 4 >& ${prob}_ddr_nn_0001_nppn_001_ntpp_004.log

##############################################################################################################################################
# MPI + OpenMP, 1 rank/core, 2 threads/rank.

#export OMP_NUM_THREADS=2

#${aprun} -n 56 -N 1 ${cpu_bind_rpc1_56} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_056_ntpp_002.Linux --tpp 2 >& ${prob}_ddr_nn_0001_nppn_056_ntpp_002.log
#${aprun} -n 32 -N 1 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_032_ntpp_002.Linux --tpp 2 >& ${prob}_ddr_nn_0001_nppn_032_ntpp_002.log
#${aprun} -n 16 -N 1 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_016_ntpp_002.Linux --tpp 2 >& ${prob}_ddr_nn_0001_nppn_016_ntpp_002.log
#${aprun} -n  8 -N 1 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_008_ntpp_002.Linux --tpp 2 >& ${prob}_ddr_nn_0001_nppn_008_ntpp_002.log
#${aprun} -n  4 -N 1 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_004_ntpp_002.Linux --tpp 2 >& ${prob}_ddr_nn_0001_nppn_004_ntpp_002.log
#${aprun} -n  2 -N 1 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_002_ntpp_002.Linux --tpp 2 >& ${prob}_ddr_nn_0001_nppn_002_ntpp_002.log
#${aprun} -n  1 -N 1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_001_ntpp_002.Linux --tpp 2 >& ${prob}_ddr_nn_0001_nppn_001_ntpp_002.log

##############################################################################################################################################
# MPI + OpenMP, 1 rank/core, 1 thread/rank.

export OMP_NUM_THREADS=1

${aprun} -n 56 -N 1 ${cpu_bind_rpc1_56} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_056_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_056_ntpp_001.log
${aprun} -n 32 -N 1 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_032_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_032_ntpp_001.log
${aprun} -n 16 -N 1 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_016_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_016_ntpp_001.log
${aprun} -n  8 -N 1 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_008_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_008_ntpp_001.log
${aprun} -n  4 -N 1 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_004_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_004_ntpp_001.log
${aprun} -n  2 -N 1 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_002_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_002_ntpp_001.log
${aprun} -n  1 -N 1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_ddr_nn_0001_nppn_001_ntpp_001.Linux --tpp 1 >& ${prob}_ddr_nn_0001_nppn_001_ntpp_001.log

##############################################################################################################################################
# Small HBM problem, strong scaled across 1 node.

##############################################################################################################################################
# MPI + OpenMP, 1 rank/core, 4 threads/rank.

#export OMP_NUM_THREADS=4

#${aprun} -n 56 -N 1 ${cpu_bind_rpc1_56} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_056_ntpp_004.Linux --tpp 4 >& ${prob}_hbm_nn_0001_nppn_056_ntpp_004.log
#${aprun} -n 32 -N 1 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_032_ntpp_004.Linux --tpp 4 >& ${prob}_hbm_nn_0001_nppn_032_ntpp_004.log
#${aprun} -n 16 -N 1 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_016_ntpp_004.Linux --tpp 4 >& ${prob}_hbm_nn_0001_nppn_016_ntpp_004.log
#${aprun} -n  8 -N 1 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_008_ntpp_004.Linux --tpp 4 >& ${prob}_hbm_nn_0001_nppn_008_ntpp_004.log
#${aprun} -n  4 -N 1 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_004_ntpp_004.Linux --tpp 4 >& ${prob}_hbm_nn_0001_nppn_004_ntpp_004.log
#${aprun} -n  2 -N 1 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_002_ntpp_004.Linux --tpp 4 >& ${prob}_hbm_nn_0001_nppn_002_ntpp_004.log
#${aprun} -n  1 -N 1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_001_ntpp_004.Linux --tpp 4 >& ${prob}_hbm_nn_0001_nppn_001_ntpp_004.log

##############################################################################################################################################
# MPI + OpenMP, 1 rank/core, 2 threads/rank.

#export OMP_NUM_THREADS=2

#${aprun} -n 56 -N 1 ${cpu_bind_rpc1_56} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_056_ntpp_002.Linux --tpp 2 >& ${prob}_hbm_nn_0001_nppn_056_ntpp_002.log
#${aprun} -n 32 -N 1 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_032_ntpp_002.Linux --tpp 2 >& ${prob}_hbm_nn_0001_nppn_032_ntpp_002.log
#${aprun} -n 16 -N 1 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_016_ntpp_002.Linux --tpp 2 >& ${prob}_hbm_nn_0001_nppn_016_ntpp_002.log
#${aprun} -n  8 -N 1 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_008_ntpp_002.Linux --tpp 2 >& ${prob}_hbm_nn_0001_nppn_008_ntpp_002.log
#${aprun} -n  4 -N 1 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_004_ntpp_002.Linux --tpp 2 >& ${prob}_hbm_nn_0001_nppn_004_ntpp_002.log
#${aprun} -n  2 -N 1 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_002_ntpp_002.Linux --tpp 2 >& ${prob}_hbm_nn_0001_nppn_002_ntpp_002.log
#${aprun} -n  1 -N 1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_001_ntpp_002.Linux --tpp 2 >& ${prob}_hbm_nn_0001_nppn_001_ntpp_002.log

##############################################################################################################################################
# MPI + OpenMP, 1 rank/core, 1 thread/rank.

export OMP_NUM_THREADS=1

${aprun} -n 56 -N 1 ${cpu_bind_rpc1_56} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_056_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_056_ntpp_001.log
${aprun} -n 32 -N 1 ${cpu_bind_rpc1_32} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_032_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_032_ntpp_001.log
${aprun} -n 16 -N 1 ${cpu_bind_rpc1_16} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_016_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_016_ntpp_001.log
${aprun} -n  8 -N 1 ${cpu_bind_rpc1_08} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_008_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_008_ntpp_001.log
${aprun} -n  4 -N 1 ${cpu_bind_rpc1_04} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_004_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_004_ntpp_001.log
${aprun} -n  2 -N 1 ${cpu_bind_rpc1_02} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_002_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_002_ntpp_001.log
${aprun} -n  1 -N 1 ${cpu_bind_rpc1_01} ${voc} ${vtime} ${xpre}${prob}_hbm_nn_0001_nppn_001_ntpp_001.Linux --tpp 1 >& ${prob}_hbm_nn_0001_nppn_001_ntpp_001.log
